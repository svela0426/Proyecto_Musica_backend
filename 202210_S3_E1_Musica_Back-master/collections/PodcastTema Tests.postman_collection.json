{
	"info": {
		"_postman_id": "42fa28ee-a913-477a-a6c4-42fb59833d13",
		"name": "PodcastTema Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_al\", data.id); ",
							"tests[\"no genera error en el Post\"] = responseCode.code === 201; "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"titulo\": \"La manzana\",\n    \"calificacion\": \"Buena\",\n    \"imagen\": \"\",\n    \"descripcion\": \"esto es una descripcion\",\n    \"precio\": 2.2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un podcast 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_al2\", data.id); ",
							"tests[\"no genera error en el Post\"] = responseCode.code === 201; "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"titulo\": \"Podcast 2\",\n    \"calificacion\": \"Media\",\n    \"imagen\": \"\",\n    \"descripcion\": \"esto es una descripcion\",\n    \"precio\": 2.2\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un tema",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_g\",data.id);\r",
							"tests[\"no genera error en el Post\"] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"Comedy\"\r\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/temas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"temas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un tema 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_g2\",data.id);\r",
							"tests[\"no genera error en el Post\"] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"Historia\"\r\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/temas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"temas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar tema a podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{new_id_al}}/temas/{{new_id_g}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{new_id_al}}",
						"temas",
						"{{new_id_g}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar tema que no existe a podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se deberia asociar el tema ya que el podcast no existe.\"] = responseCode.code === 404;\r",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"The tema with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{new_id_al}}/temas/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{new_id_al}}",
						"temas",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un tema de un podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{new_id_al}}/temas/{{new_id_g}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{new_id_al}}",
						"temas",
						"{{new_id_g}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un libro de un autor en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del autor y del libro a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un tema que no existe de un podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se deberia obtener ningun tema ya que el tema no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"The tema with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{new_id_al}}/temas/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{new_id_al}}",
						"temas",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un libro de un autor en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del autor y del libro a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un tema no asociado a un podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se puede obtener un tema que no esta asociado\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"The tema is not associated to the podcast\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{new_id_al}}/temas/{{new_id_g2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{new_id_al}}",
						"temas",
						"{{new_id_g2}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un libro de un autor en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del autor y del libro a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Asociar temas a un podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n    \"id\":{{new_id_g}},\n    \"nombre\": \"Comedy\"\n},{\n    \"id\":{{new_id_g2}},\n    \"nombre\": \"Historia\"\n}\n]"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{new_id_al}}/temas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{new_id_al}}",
						"temas"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza la lista de libros un autor existente.\r\n\r\nSe envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener los temas asociados a un podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;",
							"tests[\"temas count - podcast\"] = data.length >= 1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{new_id_al}}/temas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{new_id_al}}",
						"temas"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un libro de un autor en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del autor y del libro a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Asociar tema que no existe a podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se pueden asociar los podcastes ya que estos no existen\"] = responseCode.code === 404;\r",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"The tema with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n    \"id\":0,\n    \"nombre\": \"Comedy\"\n},{\n    \"id\":{{new_id_g2}},\n    \"nombre\": \"Historia\"\n}\n]"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{new_id_al}}/temas/",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{new_id_al}}",
						"temas",
						""
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza la lista de libros un autor existente.\r\n\r\nSe envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Borrarle un tema a un podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{new_id_al}}/temas/{{new_id_g}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{new_id_al}}",
						"temas",
						"{{new_id_g}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrarle un tema a un podcast 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{new_id_al}}/temas/{{new_id_g2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{new_id_al}}",
						"temas",
						"{{new_id_g2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrarle un tema de un podcast que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se deberia eliminar ninguna asociacion ya que el author no existe\"] = responseCode.code === 404;\r",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"The podcast with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/0/temas/{{new_id_g}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"0",
						"temas",
						"{{new_id_g}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrarle un tema que no existe a un podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se deberia eliminar ninguna asociacion ya que el podcast no existe\"] = responseCode.code === 404;\r",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"The tema with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{new_id_al}}/temas/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{new_id_al}}",
						"temas",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar un tema",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/temas/{{new_id_g}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"temas",
						"{{new_id_g}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar un tema 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/temas/{{new_id_g2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"temas",
						"{{new_id_g2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar un podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204; "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{new_id_al}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{new_id_al}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar un podcast 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204; "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{new_id_al2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{new_id_al2}}"
					]
				}
			},
			"response": []
		}
	]
}