{
	"info": {
		"_postman_id": "3a362e78-41ca-46ce-9006-e71db4522ca5",
		"name": "Playlist Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear una playlist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_p1\", data.id)\r",
							"tests[\"no genera error en el post\"] = responseCode.code === 201;\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"musica chill\",\r\n    \"fechaCreacion\": \"2022-05-16\",\r\n    \"imagen\":\"www.imagenes.com/foto\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/playlists",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"playlists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear una playlist 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_p2\",data.id)\r",
							"tests[\"no genera error en el post\"] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"musica chill\",\r\n    \"fechaCreacion\": \"2022-05-06\",\r\n    \"imagen\":\"www.imagenes.com/foto\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/playlists",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"playlists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todas las playlists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"tests[\"no genera error en el get all\"] = responseCode.code === 200;\r",
							"tests[\"playlists count\"] = data.length >=0;"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/playlists",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"playlists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener playlist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(responseBody);\r",
							"var data = JSON.parse(responseBody);    \r",
							"tests[\"no genera error en el get\"]= responseCode.code ===200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/playlists/{{new_id_p1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"playlists",
						"{{new_id_p1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener playlist que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No consulta con id que no existe\"]= responseCode.code===404;\r",
							"tests[\"Mensaje correcto de error\"]= responseBody.has(\"The playlist with the given id was not found\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/playlists/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"playlists",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Editar playlist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(responseBody);\r",
							"var data = JSON.parse(responseBody);\r",
							"tests[\"No genera error en el put\"] = responseCode.code===200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"musica g\",\r\n    \"fechaCreacion\": \"2022-05-09\",\r\n    \"imagen\":\"www.imagenes.com/ffoto\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/playlists/{{new_id_p1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"playlists",
						"{{new_id_p1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Editar playlist que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No actualiza con id que no existe\"]= responseCode.code===404;\r",
							"tests[\"Mensaje correcto de error\"]=responseBody.has(\"The playlist with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"musica chill\",\r\n    \"fechaCreacion\": \"2022-05-06\",\r\n    \"imagen\":\"www.imagenes.com/foto\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/playlists/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"playlists",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar Playlist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code===204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/playlists/{{new_id_p1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"playlists",
						"{{new_id_p1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar Playlist 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code===204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/playlists/{{new_id_p2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"playlists",
						"{{new_id_p2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar playlist que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No borraa con id que no existe\"]=responseCode.code===404;\r",
							"tests[\"Mensaje correcto de error\"]= responseBody.has(\"The playlist with the given id was not found\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/playlists/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"playlists",
						"0"
					]
				}
			},
			"response": []
		}
	]
}