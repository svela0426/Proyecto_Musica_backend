{
	"info": {
		"_postman_id": "eb73f7e7-6342-40e9-b4f6-96499227ea80",
		"name": "Podcast Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable('podcastId', data.id);",
							"tests[\"no genera error en el post\"] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"titulo\": \"La manzana\",\n    \"calificacion\": \"Buena\",\n    \"imagen\": \"\",\n    \"descripcion\": \"esto es una descripcion\",\n    \"precio\": 2.2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear creador sin nombre",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No crea podcast con nombre invalido\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"Podcast cannot have an empty title.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"titulo\": \"\",\n    \"calificacion\": \"Buena\",\n    \"imagen\": \"\",\n    \"descripcion\": \"esto es una descripcion\",\n    \"precio\": 2.2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all podcasts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el get all de podcasts\"] = responseCode.code === 200;",
							"tests[\"creadores count\"] = data.length >= 1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get un podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el get podcast\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{podcastId}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{podcastId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get podcast invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No consulta con id que no existe\"] = responseCode.code === 404;",
							"tests[\"mensaje correcto de error\"] = responseBody.has(\"The podcast with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el update de podcast\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"titulo\": \"La pera\",\n    \"calificacion\": \"Buena\",\n    \"imagen\": \"\",\n    \"descripcion\": \"esto es una descripcion\",\n    \"precio\": 2.2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{podcastId}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{podcastId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar podcast que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No actualiza con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje de correcto de error\"] = responseBody.has(\"The podcast with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"titulo\": \"La pera\",\n    \"calificacion\": \"Buena\",\n    \"imagen\": \"\",\n    \"descripcion\": \"esto es una descripcion\",\n    \"precio\": 2.2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar podcast",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el delete\"] = responseCode.code === 204;",
							"pm.globals.unset('podcastId');",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "javascript"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/{{podcastId}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"{{podcastId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar podcast invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No borra con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"The podcast with the given id was not found\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/podcasts/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"podcasts",
						"0"
					]
				}
			},
			"response": []
		}
	]
}